{"version":3,"sources":["components/app-header/app-header.js","components/search-panel/search-panel.js","components/todo-list-item/todo-list-item.js","components/todo-list/todo-list.js","components/item-status-filter/item-status-filter.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","_ref","toDo","done","react_default","a","createElement","className","SearchPanel","type","placeholder","TodoListItem","onLabelClick","console","log","concat","_this","props","label","_this$props","this","_this$props$important","important","style","color","fontWeight","onClick","Component","TodoList","elements","todos","map","item","id","itemProps","Object","objectWithoutProperties","key","todo_list_item_TodoListItem","ItemStatusFilter","App","app_header_app_header","search_panel_search_panel","item_status_filter_ItemStatusFilter","todo_list_todo_list","ReactDOM","render","components_app","document","getElementById"],"mappings":"4RAaeA,SAVG,SAAAC,GAAkB,IAAhBC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,KACtB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAf,IACIH,EAAAC,EAAAC,cAAA,uBADJ,IAEIF,EAAAC,EAAAC,cAAA,UAAKJ,EAAL,gBAAwBC,EAAxB,SAFJ,OCMOK,SARK,WAChB,OACIJ,EAAAC,EAAAC,cAAA,SAAOG,KAAK,OACLF,UAAU,4BACVG,YAAY,+DCHNC,oNACjBC,aAAe,WACXC,QAAQC,IAAR,SAAAC,OAAqBC,EAAKC,MAAMC,iFAG3B,IAAAC,EAC8BC,KAAKH,MAAjCC,EADFC,EACED,MADFG,EAAAF,EACSG,iBADT,IAAAD,KAGCE,EAAQ,CACVC,MAAOF,EAAY,YAAc,QACjCG,WAAYH,EAAY,OAAS,UAGrC,OACIlB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAhB,IAEIH,EAAAC,EAAAC,cAAA,QACIC,UAAU,uBACVgB,MAAOA,EACPG,QAASN,KAAKR,cAHlB,QAIKM,GAGXd,EAAAC,EAAAC,cAAA,UAAQG,KAAK,SACLF,UAAU,8CADlB,KAEIH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAGjBH,EAAAC,EAAAC,cAAA,UAAQG,KAAK,SACLF,UAAU,6CADlB,IAEIH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2BA9BeoB,cCmB3BC,SAlBE,SAAA3B,GAAa,IAEpB4B,EAFoB5B,EAAX6B,MAEQC,IAAI,SAACC,GAAS,IAC3BC,EAAoBD,EAApBC,GAAOC,EADoBC,OAAAC,EAAA,EAAAD,CACPH,EADO,QAGjC,OACG5B,EAAAC,EAAAC,cAAA,MAAI+B,IAAKJ,EAAI1B,UAAW,mBAAxB,QACIH,EAAAC,EAAAC,cAACgC,EAAiBJ,GADtB,QAMP,OACI9B,EAAAC,EAAAC,cAAA,MAAIC,UAAW,wBAAf,IACKsB,EADL,OCdaU,0LAGb,OACInC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAf,IACIH,EAAAC,EAAAC,cAAA,UAAQG,KAAK,SACLF,UAAU,gBADlB,OAEAH,EAAAC,EAAAC,cAAA,UAAQG,KAAK,SACLF,UAAU,6BADlB,UAEAH,EAAAC,EAAAC,cAAA,UAAQG,KAAK,SACLF,UAAU,6BADlB,gBAT8BoB,cCF/Ba,SCOH,WAQR,OACIpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,KACIH,EAAAC,EAAAC,cAACmC,EAAD,CAAWvC,KAAM,EAAGC,KAAM,IAD9B,IAGIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAf,IACIH,EAAAC,EAAAC,cAACoC,EAAD,MACAtC,EAAAC,EAAAC,cAACqC,EAAD,OAGJvC,EAAAC,EAAAC,cAACsC,EAAD,CAAUd,MAfD,CACb,CAACZ,MAAO,eAAgBI,WAAW,EAAOW,GAAI,GAC9C,CAACf,MAAO,mBAAoBI,WAAW,EAAMW,GAAI,GACjD,CAACf,MAAO,eAAgBI,WAAW,EAAOW,GAAI,MAI9C,OCbRY,IAASC,OAAO1C,EAAAC,EAAAC,cAACyC,EAAD,MAAQC,SAASC,eAAe","file":"static/js/main.94572a0f.chunk.js","sourcesContent":["import React from \"react\"; // Підключаю реакт\nimport './app-header.css'\n\nconst AppHeader = ({toDo, done}) => {  // Створюю реакт компонент (див index.js) який приймає t0Do аргумент і done\n    return (\n        <div className=\"app-header d-flex\"> {/*Створю дів заголовка +  bootstrap*/}\n            <h1>Todo List</h1> {/*Сам заголовок*/}\n            <h2>{toDo} more to do, {done} done</h2> {/*Сірий текст (відображає данні передані з index.js)*/}\n        </div>\n    );\n\n};\n\nexport default AppHeader;  // Експортую це щоб можна було використати в іншому файлі (наприклад index.js)","import React from \"react\"; // Підключаю реакт\nimport './search-panel.css' // Підключаю стилі\n\nconst SearchPanel = () => {  // Створюю реакт компонент (див index.js)\n    return (\n        <input type=\"text\"\n               className=\"form-control search-input\"\n               placeholder=\"type to search\" /> // Рядок пошуку\n    );\n};\n\nexport default SearchPanel; // Експортую це щоб можна було використати в іншому файлі (наприклад index.js)","import React, {Component} from \"react\"; // Підключаю реакт\nimport './todo-list-item.css';\n\n\nexport default class TodoListItem extends Component { // extends Component обов'язково для створення класів реакт // Можна зразу експортувати\n    onLabelClick = () => { // Створюю функцію СТРІЛКУ (ВАЖНО!!!) щоб виводить в консоль назву елемента списк\n        console.log(`Done: ${this.props.label}`) // Як ітог при нажатії на текст елемента списка в консоль виведеться те що написано в label елемента\n    };\n\n    render() {\n        const {label, important = false} = this.props; // Приймаю свойства об'єктів з app.js\n\n        const style = { // Задаю стилі для important які будуть красити текст якщо important буде добавлено в елемент списку todo-list.js\n            color: important ? 'steelblue' : 'black',\n            fontWeight: important ? 'bold' : 'normal'\n        };\n\n        return (\n            <span className=\"todo-list-item\"> {/*Спан для кожного елементу списку */}\n\n                <span\n                    className=\"todo-list-item-label\"\n                    style={style}\n                    onClick={this.onLabelClick}> {/*Елемент Списку*/} {/*Добавляю слухач нажатія на текст який верне функцію onLabelClick*/}\n                    {label}\n            </span>\n\n          <button type=\"button\"\n                  className=\"btn btn-outline-success btn-sm float-right\">  {/*Кнопка з іконкою виділення*/}\n              <i className=\"fa fa-exclamation\"/>\n          </button>\n\n          <button type=\"button\"\n                  className=\"btn btn-outline-danger btn-sm float-right\"> {/*Кнопка з іконкою видалення*/}\n              <i className=\"fa fa-trash-o\"/>\n          </button>\n\n        </span>\n        );\n\n    };\n};","import React from \"react\"; // Підключаю реакт\n\nimport TodoListItem from \"../todo-list-item/todo-list-item\"; // Імпортую елемент щоб вставити його в список\nimport './todo-list.css';\n\nconst TodoList = ({todos}) => { // Створюю реакт компонент і деструктуризацією приймаю значення елементів з index.js\n\n    const elements = todos.map((item) => {// Створюю змінну elements яка отримує t0doData item записує в нього ключі об'єктів з todoData (spread)\n       const {id, ...itemProps} = item;  // деструктуризацією достаю свойство id з об'єкта item і через rest (...) достаю всі інші ключі і записую їх в itemProps\n\n        return(\n           <li key={id} className={'list-group-item'}> {/*Передаю сюди id яке достав в 8 строчці*/} {/*Підрубаю bootstrap клас*/}\n               <TodoListItem {...itemProps} />  {/*Виводжу елемент списку з усіма свойствами*/}\n           </li>\n       )\n    });\n\n    return ( // отримує elements і виводить його\n        <ul className={'list-group todo-list'}> {/*Підрубаю bootstrap клас*/}\n            {elements} {/*Виводжу сам список в якому будуть елементи*/}\n        </ul>\n    );\n};\nexport default TodoList; // Експортую елемент в index.js","import React, {Component} from 'react'; // Підлкючив React і Component (потрібен для класів)\n\nimport './item-status-filter.css'; // Підлкючив стилі\n\nexport default class ItemStatusFilter extends Component{ // Створив клас і зразу його експортував\n\n    render() {\n        return (\n            <div className=\"btn-group\"> {/*Група кнопок*/}\n                <button type=\"button\"\n                        className=\"btn btn-info\">All</button>\n                <button type=\"button\"\n                        className=\"btn btn-outline-secondary\">Active</button>\n                <button type=\"button\"\n                        className=\"btn btn-outline-secondary\">Done</button>\n            </div>\n        );\n    };\n}\n\n\n\n","import App from './app';\n\nexport default App;","import React from 'react';\n\nimport AppHeader from \"../app-header/app-header\"; // Підключили зовнішні файли (потрібно для гарного оформлення прилоги в сенсі коду всередині)\nimport SearchPanel from \"../search-panel/search-panel\";// Підключили зовнішні файли (потрібно для гарного оформлення прилоги в сенсі коду всередині)\nimport TodoList from \"../todo-list/todo-list\";// Підключили зовнішні файли (потрібно для гарного оформлення прилоги в сенсі коду всередині)\nimport ItemStatusFilter from \"../item-status-filter/item-status-filter\";\n\nimport './app.css'; // Підлкючаю css\n\nconst App = () => { // Більшість реакт компонентів створюжться через функцію стрілку\n\n    const todoData = [ // Ну тут все просто, створюю масив об'єктів з данними для списка todo\n        {label: \"Drink Coffee\", important: false, id: 1},\n        {label: \"Make Awesome App\", important: true, id: 2},\n        {label: \"Have a lunch\", important: false, id: 3}\n    ];\n\n    return (\n        <div className=\"todo-app\">  {/*Створив загальний дів todoшки */}\n            <AppHeader toDo={1} done={3}/> {/*Передав данні для appheader */}\n\n            <div className=\"top-panel d-flex\"> {/*Cтворив div пошуку і сортування*/}\n                <SearchPanel/>\n                <ItemStatusFilter/>\n            </div>\n\n            <TodoList todos={todoData}/> {/*Записав в todos данні з масиву todoData*/}\n        </div>\n    );// JSX зборщик кода який збирає всі компоненти в 1 для удобного вивода\n};\n\nexport default App;","import React from 'react'; // Підлкючили реакт\nimport ReactDOM from 'react-dom'; // Тоже корисна штука яку обов'язково нада підрубать\n\nimport App from \"./components/app\";\n\nReactDOM.render(<App/>, document.getElementById('root')); // Це рендер функція (щоб вивети все на екран). При цьому першим має бути що а потім куди\n"],"sourceRoot":""}